import json
import requests
from json2xml.utils import readfromstring
from json2xml import json2xml

# Uncomment and provide the absolute path when running in unix based server.
# config_path = expanduser('~' + "/path/config.json")

# Hardcoded path of configuration file.
config_path = r"D:\Projects\Verloop-Assignment\config.json"

# Reading configuration file.
with open(config_path, "r") as open_file:
    cred = json.loads(open_file.read())


def get_address_detials(address, flag):
    """
    This function is responsible for fetching the latitude and longitude using Google Reverse Geocode API.
    :param address: address for which you want to find the latitude and longitude
    :param flag: flag for output format
                note: supported output formats are json & xml.
    :return: lat & long with address
    """
    try:
        gecode_api_endpoint = "{api_endpoint}address={address}&key={key}".format(api_endpoint=cred.get("GEOCODE_API"),
                                                                                 address=address,
                                                                                 key=cred.get("API_KEY"))
        response = requests.get(gecode_api_endpoint, verify=True)
        response_dict = json.loads(response.text).get("results")
        if response_dict:
            address_details = {
                "address": address,
                "coordinates": response_dict[0].get("geometry").get("location")
            }
            data = readfromstring(json.dumps(address_details))
            if flag == "json":
                return address_details
            elif flag == "xml":
                return str(json2xml.Json2xml(data, wrapper="root", attr_type=False, pretty=False).to_xml(), "utf-8")
            else:
                return {"response": "Unsupported output format!"}
        else:
            return {"response": "Address not found! Please enter a valid address."}
    except Exception:
        return {"response": "Something went wrong!"}
